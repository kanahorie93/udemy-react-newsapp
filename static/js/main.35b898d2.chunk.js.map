{"version":3,"sources":["constants/index.js","components/Button/index.js","components/App/index.js","components/Table/index.js","components/Search/index.js","serviceWorker.js","components/Javascript/index.js","components/Python/index.js","index.js"],"names":["PATH_BASE","Button","onClick","children","className","style","defaultProps","Component","Loading","Sort","sortKey","onSort","activeSortKey","sortClass","push","join","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","Table","props","state","isSortReverse","bind","this","setState","removeItem","sortedList","reverseSortedList","map","item","key","objectID","href","url","title","author","num_comments","points","type","Search","input","focus","onChange","value","onSubmit","FormGroup","fontWeight","border","width","ref","node","App","results","searchKey","searchTerm","isLoading","searchValue","fetchTopStories","setTopStories","result","hits","page","prevState","oldHits","updatedHits","updateTopStories","fetch","then","response","json","catch","e","event","checkTopStoriesSearchTerm","preventDefault","id","updatedList","filter","target","ButtonWithLoading","classsName","backgroundColor","rest","Boolean","window","location","hostname","match","Javascript","withLoading","Python","Root","basename","Navbar","Brand","to","Toggle","Collapse","Nav","NavItem","exact","activeClassName","path","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.35b898d2.chunk.js","sourcesContent":["// default parameters to fetch data from the api\nexport const DEFAULT_QUERY = 'react';\nexport const PATH_BASE = 'https://hn.algolia.com/api/v1';\nexport const PATH_SEARCH = '/search';\nexport const PARAM_SEARCH = 'query=';\nexport const DEFAULT_PAGE = 0;\nexport const PARAM_PAGE = 'page=';\nexport const DEFAULT_HPP = 10;\nexport const PARAM_HPP = 'hitsPerPage='","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ onClick, children, className='', style }) =>\n  <button \n    className= { className }\n    onClick={ onClick }\n    style={ style }\n  >\n    { children }  \n  </button>\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  className: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n}\n\nButton.defaultProps = {\n  className: ''\n}\n\nexport const Loading = () => \n  <div>\n    <h2>Loading...</h2>\n  </div>\n\nexport const Sort = ({ sortKey, onSort, children, className, activeSortKey }) => {\n    const sortClass = ['btn default'];\n\n    if (sortKey === activeSortKey) {\n      sortClass.push('btn btn-primary');\n    }\n\n    return(\n      <Button\n        className={ sortClass.join(' ') }\n        onClick={ () => onSort(sortKey) }\n      >\n        { children }\n      </Button>\n    )\n}","import React, { Component } from 'react';\nimport { \n  DEFAULT_QUERY, PATH_BASE, PATH_SEARCH, PARAM_SEARCH, \n  DEFAULT_PAGE, PARAM_PAGE, DEFAULT_HPP, PARAM_HPP,\n} from '../../constants/index'\nimport Table from '../Table/index';\nimport { Button, Loading } from '../Button/index'\nimport Search from '../Search/index'\n\n// higher order component\nconst withLoading = (Component) => ({ isLoading, ...rest }) =>\nisLoading ? <Loading /> : <Component {...rest} />\n\nconst updateTopStories = (hits, page) => prevState => {\n  const { searchKey, results } = prevState;\n\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : []\n  const updatedHits = [...oldHits, ...hits];\n\n  return { results: { ...results, [searchKey]: {hits: updatedHits, page}}, isLoading: false }\n}\n\nclass App extends Component {\n\n  // setting up internal component state\n  // ES6 class can use constructor to initialize internal state\n  constructor(props){\n    // super props sets this.props to the constructor\n    super(props);\n    \n    // setting up state\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY,\n      isLoading: false,\n    }\n\n    // bind the functions to this (app component)\n    this.removeItem = this.removeItem.bind(this)\n    this.searchValue = this.searchValue.bind(this)\n    this.fetchTopStories = this.fetchTopStories.bind(this)\n    this.setTopStories = this.setTopStories.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  // check top stories search term\n  checkTopStoriesSearchTerm(searchTerm){\n    return !this.state.results[searchTerm];\n  }\n\n  // set top stories\n  setTopStories(result){\n    // get the hits and page from result\n    const { hits, page } = result;\n    this.setState(updateTopStories(hits, page));\n  }\n\n  // fetch top stories\n  fetchTopStories(searchTerm, page){\n    this.setState({ isLoading: true })\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n    .then(response => response.json())\n    .then(result => this.setTopStories(result))\n    .catch(e => e);\n  }\n\n  // component did mount\n  componentDidMount() {\n    const { searchTerm } = this.state\n    this.setState({ searchKey: searchTerm });\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\n  }\n\n  // on search submit function\n  onSubmit(event){\n    const { searchTerm } = this.state\n    this.setState({ searchKey: searchTerm });\n\n    if (this.checkTopStoriesSearchTerm(searchTerm)) {\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\n    }\n    \n    event.preventDefault();\n  }\n\n  // lets rewrite removeItem function in ES6\n  removeItem(id){\n    const { results, searchKey } = this.state\n    const { hits, page } = results[searchKey]\n    const updatedList = hits.filter(item => item.objectID !== id)\n    this.setState({ results: {...results, [searchKey]: {hits: updatedList, page}}})\n  }\n\n  // get input field value from search form\n  searchValue(event){\n    this.setState({ searchTerm: event.target.value })\n  }\n\n  render() {\n\n    const { results, searchTerm, searchKey, isLoading } = this.state;\n\n    const page = (results && results[searchKey] && results[searchKey].page) || 0;\n\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\n\n    return (\n      <div>\n        <div className=\"jumbotron text-center\">\n          <Search\n            onChange={ this.searchValue } \n            value={ searchTerm } \n            onSubmit={ this.onSubmit }\n          >NEWSAPP</Search>\n        </div>\n        <Table\n          list={ list }\n          removeItem={ this.removeItem }\n        />\n\n        <div className=\"text-center alert\">\n          <ButtonWithLoading\n            isLoading={ isLoading }\n            classsName=\"btn btn-success\"\n            style={{backgroundColor:\"green\"}}\n            onClick={ () => this.fetchTopStories(searchTerm, page+1) }>\n            Load more\n          </ButtonWithLoading>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst ButtonWithLoading = withLoading(Button);\n\nexport default App;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Sort } from '../Button/index'\nimport { sortBy } from 'lodash'\n\nconst SORTS = {\n    NONE: list => list,\n    TITLE: list => sortBy(list, 'title'),\n    AUTHOR: list => sortBy(list, 'author'),\n    COMMENTS: list => sortBy(list, 'num_comments').reverse(),\n    POINTS: list => sortBy(list, 'points').reverse(),\n  }\n\nclass Table extends Component {\n\n    constructor(props){\n      super(props);\n      \n      this.state = {\n        sortKey: 'NONE',\n        isSortReverse: false,\n      }\n  \n      this.onSort = this.onSort.bind(this);\n    }\n  \n    // sorting function\n    onSort(sortKey){\n      const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse\n      this.setState({ sortKey, isSortReverse })\n    }\n  \n    render() {\n      const { list, removeItem } = this.props;\n      const { sortKey, isSortReverse } = this.state;\n  \n      const sortedList = SORTS[sortKey](list);\n      const reverseSortedList = isSortReverse ? sortedList.reverse() : sortedList;\n  \n      return (\n        <div>\n  \n          <div className=\"text-center\">\n  \n            <Sort\n              className=\"btn btn-xs btn-default sortBtn\"\n              sortKey={ 'NONE' }\n              onSort={ this.onSort }\n              activeSortKey={ sortKey }\n            >Default</Sort>\n  \n            <Sort\n              className=\"btn btn-xs btn-default sortBtn\"\n              sortKey={ 'TITLE' }\n              onSort={ this.onSort }\n              activeSortKey={ sortKey }\n            >Title</Sort>\n  \n            <Sort\n              className=\"btn btn-xs btn-default sortBtn\"\n              sortKey={ 'AUTHOR' }\n              onSort={ this.onSort }\n              activeSortKey={ sortKey }\n            >Author</Sort>\n  \n            <Sort\n              className=\"btn btn-xs btn-default sortBtn\"\n              sortKey={ 'COMMENTS' }\n              onSort={ this.onSort }\n              activeSortKey={ sortKey }\n            >Comments</Sort>\n  \n            <Sort\n              className=\"btn btn-xs btn-default sortBtn\"\n              sortKey={ 'POINTS' }\n              onSort={ this.onSort }\n              activeSortKey={ sortKey }\n            >Points</Sort>\n  \n            <hr />\n  \n          </div>\n          {\n            reverseSortedList.map(item =>         \n              <div key={item.objectID}>\n                <h1> <a href={item.url}>{item.title}</a> </h1>\n                <h4>\n                { item.author } | { item.num_comments } Comments | {item.points} Points\n  \n                  <Button\n                    className=\"btn btn-danger btn-xs\"\n                    type=\"button\"\n                    onClick={ () => removeItem(item.objectID) }>\n                      Remove me\n                  </Button>\n                </h4> <hr />\n                \n              </div>\n            )\n          }\n        </div>\n      )\n    }\n  }\n  \n  Table.propTypes = {\n    list: PropTypes.arrayOf(\n      PropTypes.shape({\n        objectID: PropTypes.string.isRequired,\n        author: PropTypes.string,\n        url: PropTypes.string,\n        num_comments: PropTypes.number,\n        points: PropTypes.number,\n      })\n    ).isRequired,\n    removeItem: PropTypes.func.isRequired,\n  }\n\nexport default Table;","import React, { Component } from 'react';\nimport { FormGroup } from 'react-bootstrap';\nimport { Button } from '../Button/index'\n\nclass Search extends Component {\n    componentDidMount(){\n      this.input.focus();\n    }\n    render(){\n      const { onChange, value, children, onSubmit } = this.props;\n      return(\n        <form onSubmit={ onSubmit }>\n          <FormGroup>\n          <h1 style={{ fontWeight: 'bold' }}>{ children }</h1>\n          <hr style={{ border: '2px solid black', width: '100px' }} />\n    \n          <div className=\"input-group\">\n          <input\n            className=\"form-control width100 searchForm\" \n            type=\"text\" \n            onChange={ onChange } \n            value={ value } \n            ref={(node) => { this.input = node }}\n          />\n          <span className=\"input-group-btn\">\n            <Button\n              className=\"btn btn-primary searchBtn\"\n              type=\"submit\"\n            >\n              Search\n            </Button>\n          </span>\n          </div>\n          </FormGroup>\n        </form>\n      )\n    }\n  }\n\nexport default Search;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport { \n  DEFAULT_QUERY, PATH_BASE, PATH_SEARCH, PARAM_SEARCH, \n  DEFAULT_PAGE, PARAM_PAGE, DEFAULT_HPP, PARAM_HPP,\n} from '../../constants/index'\nimport Table from '../Table/index';\nimport { Button, Loading } from '../Button/index'\nimport Search from '../Search/index'\n\n// higher order component\nconst withLoading = (Component) => ({ isLoading, ...rest }) =>\nisLoading ? <Loading /> : <Component {...rest} />\n\nconst updateTopStories = (hits, page) => prevState => {\n  const { searchKey, results } = prevState;\n\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : []\n  const updatedHits = [...oldHits, ...hits];\n\n  return { results: { ...results, [searchKey]: {hits: updatedHits, page}}, isLoading: false }\n}\n\nclass Javascript extends Component {\n\n  // setting up internal component state\n  // ES6 class can use constructor to initialize internal state\n  constructor(props){\n    // super props sets this.props to the constructor\n    super(props);\n    \n    // setting up state\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: 'javascript',\n      isLoading: false,\n    }\n\n    // bind the functions to this (app component)\n    this.removeItem = this.removeItem.bind(this)\n    this.searchValue = this.searchValue.bind(this)\n    this.fetchTopStories = this.fetchTopStories.bind(this)\n    this.setTopStories = this.setTopStories.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  // check top stories search term\n  checkTopStoriesSearchTerm(searchTerm){\n    return !this.state.results[searchTerm];\n  }\n\n  // set top stories\n  setTopStories(result){\n    // get the hits and page from result\n    const { hits, page } = result;\n    this.setState(updateTopStories(hits, page));\n  }\n\n  // fetch top stories\n  fetchTopStories(searchTerm, page){\n    this.setState({ isLoading: true })\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n    .then(response => response.json())\n    .then(result => this.setTopStories(result))\n    .catch(e => e);\n  }\n\n  // component did mount\n  componentDidMount() {\n    const { searchTerm } = this.state\n    this.setState({ searchKey: searchTerm });\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\n  }\n\n  // on search submit function\n  onSubmit(event){\n    const { searchTerm } = this.state\n    this.setState({ searchKey: searchTerm });\n\n    if (this.checkTopStoriesSearchTerm(searchTerm)) {\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\n    }\n    \n    event.preventDefault();\n  }\n\n  // lets rewrite removeItem function in ES6\n  removeItem(id){\n    const { results, searchKey } = this.state\n    const { hits, page } = results[searchKey]\n    const updatedList = hits.filter(item => item.objectID !== id)\n    this.setState({ results: {...results, [searchKey]: {hits: updatedList, page}}})\n  }\n\n  // get input field value from search form\n  searchValue(event){\n    this.setState({ searchTerm: event.target.value })\n  }\n\n  render() {\n\n    const { results, searchTerm, searchKey, isLoading } = this.state;\n\n    const page = (results && results[searchKey] && results[searchKey].page) || 0;\n\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\n\n    return (\n      <div>\n        <Table\n          list={ list }\n          removeItem={ this.removeItem }\n        />\n\n        <div className=\"text-center alert\">\n          <ButtonWithLoading\n            isLoading={ isLoading }\n            classsName=\"btn btn-success\"\n            style={{backgroundColor:\"green\"}}\n            onClick={ () => this.fetchTopStories(searchTerm, page+1) }>\n            Load more\n          </ButtonWithLoading>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst ButtonWithLoading = withLoading(Button);\n\nexport default Javascript;\n","import React, { Component } from 'react';\nimport { \n  DEFAULT_QUERY, PATH_BASE, PATH_SEARCH, PARAM_SEARCH, \n  DEFAULT_PAGE, PARAM_PAGE, DEFAULT_HPP, PARAM_HPP,\n} from '../../constants/index'\nimport Table from '../Table/index';\nimport { Button, Loading } from '../Button/index'\nimport Search from '../Search/index'\n\n// higher order component\nconst withLoading = (Component) => ({ isLoading, ...rest }) =>\nisLoading ? <Loading /> : <Component {...rest} />\n\nconst updateTopStories = (hits, page) => prevState => {\n  const { searchKey, results } = prevState;\n\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : []\n  const updatedHits = [...oldHits, ...hits];\n\n  return { results: { ...results, [searchKey]: {hits: updatedHits, page}}, isLoading: false }\n}\n\nclass Python extends Component {\n\n  // setting up internal component state\n  // ES6 class can use constructor to initialize internal state\n  constructor(props){\n    // super props sets this.props to the constructor\n    super(props);\n    \n    // setting up state\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: 'python',\n      isLoading: false,\n    }\n\n    // bind the functions to this (app component)\n    this.removeItem = this.removeItem.bind(this)\n    this.searchValue = this.searchValue.bind(this)\n    this.fetchTopStories = this.fetchTopStories.bind(this)\n    this.setTopStories = this.setTopStories.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  // check top stories search term\n  checkTopStoriesSearchTerm(searchTerm){\n    return !this.state.results[searchTerm];\n  }\n\n  // set top stories\n  setTopStories(result){\n    // get the hits and page from result\n    const { hits, page } = result;\n    this.setState(updateTopStories(hits, page));\n  }\n\n  // fetch top stories\n  fetchTopStories(searchTerm, page){\n    this.setState({ isLoading: true })\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n    .then(response => response.json())\n    .then(result => this.setTopStories(result))\n    .catch(e => e);\n  }\n\n  // component did mount\n  componentDidMount() {\n    const { searchTerm } = this.state\n    this.setState({ searchKey: searchTerm });\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\n  }\n\n  // on search submit function\n  onSubmit(event){\n    const { searchTerm } = this.state\n    this.setState({ searchKey: searchTerm });\n\n    if (this.checkTopStoriesSearchTerm(searchTerm)) {\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\n    }\n    \n    event.preventDefault();\n  }\n\n  // lets rewrite removeItem function in ES6\n  removeItem(id){\n    const { results, searchKey } = this.state\n    const { hits, page } = results[searchKey]\n    const updatedList = hits.filter(item => item.objectID !== id)\n    this.setState({ results: {...results, [searchKey]: {hits: updatedList, page}}})\n  }\n\n  // get input field value from search form\n  searchValue(event){\n    this.setState({ searchTerm: event.target.value })\n  }\n\n  render() {\n\n    const { results, searchTerm, searchKey, isLoading } = this.state;\n\n    const page = (results && results[searchKey] && results[searchKey].page) || 0;\n\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\n\n    return (\n      <div>\n        <Table\n          list={ list }\n          removeItem={ this.removeItem }\n        />\n\n        <div className=\"text-center alert\">\n          <ButtonWithLoading\n            isLoading={ isLoading }\n            classsName=\"btn btn-success\"\n            style={{backgroundColor:\"green\"}}\n            onClick={ () => this.fetchTopStories(searchTerm, page+1) }>\n            Load more\n          </ButtonWithLoading>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst ButtonWithLoading = withLoading(Button);\n\nexport default Python;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter as Router, Route, Link, NavLink } from 'react-router-dom';\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Javascript from './components/Javascript';\nimport Python from './components/Python';\n\nconst Root = () =>\n<Router basename=\"/udemy-react-newsapp\">\n  <div>\n    <Navbar>\n      <Navbar.Brand>\n        <Link to=\"/\">NEWSAPP</Link>\n      </Navbar.Brand>\n      <Navbar.Toggle />\n\n      <Navbar.Collapse>\n        <Nav>\n          <NavItem>\n            <NavLink exact to=\"/\" activeClassName=\"active\">Home</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink to=\"/javascript\" activeClassName=\"active\">Javascript</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink to=\"/python\" activeClassName=\"active\">Python</NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar.Collapse>\n      \n    </Navbar>\n\n    <Route exact path=\"/\" component={ App } />\n    <Route exact path=\"/javascript\" component={ Javascript } />\n    <Route exact path=\"/python\" component={ Python } />\n  </div>\n</Router>\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}